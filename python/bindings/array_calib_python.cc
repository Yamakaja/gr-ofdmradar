/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(array_calib.h)                                             */
/* BINDTOOL_HEADER_FILE_HASH(88d6cedbe19862eeac84782ba1f90854)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <ofdmradar/array_calib.h>
// pydoc.h is automatically generated in the build directory
#include <array_calib_pydoc.h>

void bind_array_calib(py::module &m)
{
    using array_calib = gr::ofdmradar::array_calib;

    py::class_<array_calib,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<array_calib>>(m, "array_calib", D(array_calib))

        .def(py::init(&array_calib::make),
             py::arg("array_size"),
             py::arg("targets"),
             py::arg("pilot_angle"),
             D(array_calib, make));
}
